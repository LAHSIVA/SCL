#5) #4 euler
def f(x, y):
    return (2 - y**2) / (5 * x)

def euler(x0, y, h, x):
    temp = 0
    while x0 < x:
        temp = y
        y = y + h * f(x0, y)
        x0 = x0 + h
    return y0


def milne_predictor_corrector(x0, y0, h, xn):
    y1 = euler(x0, y0, h, x0 + h)
    y2 = euler(x0, y0, h, x0 + 2*h)
    y3 = euler(x0, y0, h, x0 + 3*h)
    while x0 < xn:
        y4_predict = y0 + (4*h/3) * (2*f(x0, y0) - f(x0 + h, y1) + 2*f(x0 + 2*h, y2))
        y4_correct = y2 + (h/3) * (f(x0 + 2*h, y2) + 4*f(x0 + h, y1) + f(x0, y0))
        y0, y1, y2, y3 = y1, y2, y3, y4_correct
        x0 = x0 + h
    return y4_correct

def adam_bashforth(x0, y0, h, xn):
    y1 = euler(x0, y0, h, x0 + h)
    y2 = euler(x0, y0, h, x0 + 2*h)
    y3 = euler(x0, y0, h, x0 + 3*h)
    while x0 < xn:
        y4_predict = y3 + (h/24) * (55*f(x0 + 3*h, y3) - 59*f(x0 + 2*h, y2) + 37*f(x0 + h, y1) - 9*f(x0, y0))
        y4_correct = y3 + (h/24) * (9*f(x0 + h, y4_predict) + 19*f(x0 + 3*h, y3) - 5*f(x0 + 2*h, y2) + f(x0, y0))
        y0, y1, y2, y3 = y1, y2, y3, y4_correct
        x0 = x0 + h
    return y4_correct

y0 = 1
x0 = 4
h = 0.1
xn1 = 4.1
xn2 = 4.2
xn3 = 4.3
xn4 = 4.4

y1 = euler(x0, y0, h, xn1)
y2 = euler(x0, y0, h, xn2)
y3 = euler(x0, y0, h, xn3)
y4_milne = milne_predictor_corrector(x0, y0, h, xn4)
y4_adam = adam_bashforth(x0, y0, h, xn4)

print(f"y({xn1}) = {y1}")
print(f"y({xn2}) = {y2}")
print(f"y({xn3}) = {y3}")
print(f"y({xn4}) by Milne's predictor corrector method = {y4_milne}")
print(f"y({xn4}) by Adam Bashforth method = {y4_adam}")
